kind: pipeline
type: docker
# pipeline name
name: container-test-and-build

# pipeline steps
steps:
# for unit testing
# unit test yang digunakan adalah Detroit Test
# jadi perlu nge running real database
- name: tests
  # image golang dipilih karena aplikasi yang kita akan build adalah golang apps   
  image: golang
  # environment yang dibutuhkan sama aplikasi golang
  environment:
    DB_HOST: db
    DB_PORT: 5432
    DB_USER: noobee
    DB_PASS: noobee
    DB_NAME: noobee
  # ini akan menunjukkan bahwa step ini akan jalan
  # setelah services/step yang namanya "db" selesai/sedang berjalan
  depends_on:
    - db
  # custom command yang digunakan untuk menjalankan aplikasi
  # biasanya diisi dengan running unit test, atau menjalankan docker run
  commands:
  - make run-test

# for build image docker
- name : build
  # disini kita menggunakan plugins yaitu docker
  image: plugins/docker
  # settings docker
  settings: 
    # repo target pada docker registry
    repo: ibnu19/nbid-intermediate-drone
    # username dockerhub
    username:
      # kita akan ambil value-nya dari secret yang di setup pada drone
      # secret ini seperti variable config
      from_secret: docker_username
    # password dockerhub
    password:
      # kita juga akan mengambil value password dari secret
      from_secret: docker_password
    
    # setup tags dengan latest
    tags: latest

    # dockerfile yang digunakan
    dockerfile: Multistage-Alpine-Dockerfile
  when:
    event:
    - tag
    - push
  # depends pada step "tests"
  # sehingga step ini akan di eksekusi setelah step "tests" selesai
  depends_on:
    - tests

# untuk nge-running services database
services:
  # membuat services databse dengan nama `db`
- name: db
  # menggunakan image postgres, karena DB yang digunakan pada golang apps
  # kita adalah postgres
  image: postgres
  # setup environment variable
  environment:
    POSTGRES_PASSWORD: noobee
    POSTGRES_USER: noobee
    POSTGRES_DB: noobee

# trigger drone saat ada event push pada branch master
# kita bisa setup trigger dengan branch, atau event, atau branch dan event
# pada kasus kali ini, kita menggunakan branch dan event
trigger:
  branch:
  - main
  event:
  - push

# pisah antar pipeline menggunakan garis 3
---
# pipeline CD
kind: pipeline
type: docker
name: deploy

# remove step clone
clone:
  disable: true

steps:
# nama step
- name: deploy to server
  # menggunakan image drone-ssh agar bisa melakukan ssh ke server
  image: appleboy/drone-ssh
  # setting drone ssh
  settings:
    host:
      # server target
      - 103.59.95.233
    # username server
    username: 
      from_secret: ssh_username

    # password server
    password:
      from_secret: ssh_password
    port: 22
    command_timeout: 2m
    # script running apps
    script:
      - cd ibnu/app
      - make run-golang-drone-app

# depends ke pipeline-container-test-and-build
depends_on:
- container-test-and-build  